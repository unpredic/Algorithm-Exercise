1、01背包问题
	每件物品最多用一次
2、完全背包问题
	每件物品可以用无限次
3、多重背包问题
	每件物品可以有s[i]个
4、多重背包问题Ⅱ
5、分组背包问题

所有背包问题的
状态表示：都是f[i, j]
	->集合：所有只从前i个物品中选，并且总体积不超过j的选法
	->属性：最大值、最小值、数量
状态计算(状态转移方程)：集合的划分

注意：如果我们用的是上一轮的状态的话，我们就从大到小来枚举体积。
如果我们用的是本层的状态的话，我们就从小到大来枚举体积。
原因很简单：如果我们用的是上一层的体积的话，那么我们从大到小来枚举体积的话就可以保证我们算这个体积的时候所用到的体积还没有被计算过，就是存的是上一次的状态

疑问：为什么有时候要写f[i][j] = f[i - 1][j]有时候不写？
解答：当k等于0时包括这种情况
如：f[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]);